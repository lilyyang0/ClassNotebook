/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.85
 * Generated at: 2024-02-27 10:40:36 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.html;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class formEx_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>formEx</title>\r\n");
      out.write("<style>\r\n");
      out.write("/*css주석문*/\r\n");
      out.write("/*선택자 {css속성:값;css속성:값;}*/\r\n");
      out.write("/*선택자에는 tag, .클래스명 #id명*/\r\n");
      out.write(".c1 {width:100px;}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<h4>form(웹교재 p133)</h4>\r\n");
      out.write("\r\n");
      out.write("<form name=\"frm\" id=\"\" method=\"get\" action=\"ok.jsp\" oninput=\"x.value=parseInt(price.value)\" autocomplete=\"on\">\r\n");
      out.write("<input type=\"submit\" value=\"확인\"/>\r\n");
      out.write("<input type=\"reset\" value=\"취소\"/>\r\n");
      out.write("<br/>\r\n");
      out.write("<input type=\"button\" value=\"type속성값이button\" onclick=\"alert('hello!!!');\"/>\r\n");
      out.write("<button type=\"button\">button요소(type=\"button\")</button>\r\n");
      out.write("<button type=\"submit\">button요소(type=\"submit\")</button>\r\n");
      out.write("<button type=\"reset\">button요소(type=\"reset\")</button>\r\n");
      out.write("<fieldset>\r\n");
      out.write("<legend>html5의 여러 type속성값</legend>\r\n");
      out.write("<ul type=\"square\">\r\n");
      out.write("<img src=\"http://localhost:8081/wp/imgs/submit.png\" alt=\"submitIMG\" title=\"전송이미지\" class=\"c1\"/ >\r\n");
      out.write("<input type=\"image\" src=\"");
      out.print(request.getContextPath() );
      out.write("/imgs/submit.png\" title=\"submit역할이미지\" class=\"c1\"/>\r\n");
      out.write("<li><label class=\"reg\" for=\"uid\">학번:</label>\r\n");
      out.write("<input type=\"text\" id=\"uid\" placeholder=\"하이픈없이 입력\"/></li>\r\n");
      out.write("<li><label class=\"reg\" for=\"subj\">HTML, CSS</label>\r\n");
      out.write("<input type=\"text\" id=\"subj\" value=\"열공해야합니다\" readonly></li>\r\n");
 int bno=999; 
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("<li>★★★★hidden: <input type=\"hidden\" name=\"bno\" id=\"bno\" value=\"");
      out.print(bno );
      out.write("\"/></li>\r\n");
      out.write("<li>검색 search:<input type=\"search\" name=\"search\" id=\"search\" autofocus=\"autofocus\" placeholder=\"검색어를 입력하세요\"/></li>\r\n");
      out.write("<li><label for=\"price\">범위 range: <span id=\"minPrice\">1000</span>\r\n");
      out.write("</label><input type=\"range\" name=\"price\" id=\"price\" value=\"1000\" max=\"10000\" min=\"100\" step=\"1\"/><span id=\"maxPrice\">10000</span>\r\n");
      out.write("=>선택한값:<output name=\"x\" for=\"price\"></output>\r\n");
      out.write("</li>\r\n");
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("<li><label for=\"file\">file:<input type=\"file\" name=\"file\" id=\"file\"/></label></li>\r\n");
      out.write("\r\n");
      out.write("<li><label for=\"col\">color:</label><input type=\"color\" name=\"col\" id=\"col\"/></li>\r\n");
      out.write("\r\n");
      out.write("<li><label for=\"d\">date:</label><input type=\"date\" name=\"date\" id=\"d\"/></li>\r\n");
      out.write("\r\n");
      out.write("<li><label for=\"date-local\">datetime-local:</label><input type=\"datetime-local\" name=\"datetime-local\" id=\"date-local\"/></li>\r\n");
      out.write("\r\n");
      out.write("<li><label for=\"mon\">month</label><input type=\"month\" name=\"month\" id=\"mon\"/></li>\r\n");
      out.write("\r\n");
      out.write("<li><label for=\"wk\">week</label><input type=\"week\" name=\"week\" id=\"wk\"/></li>\r\n");
      out.write("\r\n");
      out.write("<li><label for=\"t\">time</label><input type=\"time\" name=\"time\" id=\"t\"/></li>\r\n");
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("<li><label for=\"email\">email:<input type=\"email\" name=\"eamil\" id=\"email\"/></label></li>\r\n");
      out.write("<li><label for=\"tel\">tel:<input type=\"tel\" name=\"tel\" id=\"tel\"/></label></li>\r\n");
      out.write("\r\n");
      out.write("<li><label for=\"url\">url:<input type=\"url\" name=\"url\" id=\"url\"/></label></li>\r\n");
      out.write("<li><label for=\"orderQty\">주문수량 number:\r\n");
      out.write("</label><input type=\"number\" name=\"orderQty\" id=\"orderQty\" value=\"1\" max=\"10\" min=\"0\" step=\"2\"/>\r\n");
      out.write("</li>\r\n");
      out.write("</ul>\r\n");
      out.write("</fieldset>\r\n");
      out.write("<ul>\r\n");
      out.write("<li>이름(maxlength):<input type=\"text\" name=\"uName\" id=\"uName\" value=\"성이름\" required=\"required\" size=\"15\" maxlength=\"10\"/></li>\r\n");
      out.write("<li>비번(size속성=\"20\"):<input type=\"password\" name=\"uPwd\" id=\"uPwd\" value=\"12345\" required=\"required\" size=\"20\"/></li>\r\n");
      out.write("<li>성별(단일선택):\r\n");
      out.write("		<input type=\"radio\" name=\"gender\" id=\"Female\" value=\"F\" checked=\"checked\"/><label for=\"Female\">여성</label>\r\n");
      out.write("		<input type=\"radio\" name=\"gender\" id=\"male\" value=\"M\"/><label for=\"male\">남성</label>\r\n");
      out.write("</li>\r\n");
      out.write("<li>좋아하는 동물(다중선택):\r\n");
      out.write("<input type=\"checkbox\" name=\"animals\" id=\"ao1\" value=\"dog\"/><label for=\"ao1\">개</label>\r\n");
      out.write("<input type=\"checkbox\" name=\"animals\" id=\"ao2\" value=\"cat\"/><label for=\"ao2\">고양이</label>\r\n");
      out.write("<input type=\"checkbox\" name=\"animals\" id=\"ao3\" value=\"panda\"/><label for=\"ao3\">판다</label>\r\n");
      out.write("<input type=\"checkbox\" name=\"animals\" id=\"ao4\" value=\"rabbit\"/><label for=\"ao4\">토끼</label>\r\n");
      out.write("</li>\r\n");
      out.write("<li>언어:select는 유일하게 자식element를 가진다.\r\n");
      out.write("<select name=\"language\" id=\"language\">\r\n");
      out.write("	<option value=\"0\">선택</option>\r\n");
      out.write("	<option value=\"korean\">Korean</option>\r\n");
      out.write("	<option value=\"english\">English</option>\r\n");
      out.write("	<option value=\"french\">French</option>\r\n");
      out.write("	<option value=\"spanish\">Spanish</option>\r\n");
      out.write("	<option value=\"japanese\">Japanese</option>\r\n");
      out.write("	<option value=\"chinese\">Chinese</option>\r\n");
      out.write("</select>\r\n");
      out.write("</li>\r\n");
      out.write("<li>언어(다중선택):\r\n");
      out.write("<select name=\"language1\" id=\"language1\" size=\"7\" multiple=\"multiple\">\r\n");
      out.write("	<option value=\"1\">선택</option>\r\n");
      out.write("	<option value=\"korean\">Korean</option>\r\n");
      out.write("	<option value=\"english\">English</option>\r\n");
      out.write("	<option value=\"french\">French</option>\r\n");
      out.write("	<option value=\"spanish\">Spanish</option>\r\n");
      out.write("	<option value=\"japanese\">Japanese</option>\r\n");
      out.write("	<option value=\"chinese\">Chinese</option>\r\n");
      out.write("	<option value=\"hebrew\">hebrew</option>\r\n");
      out.write("</select>\r\n");
      out.write("</li>\r\n");
      out.write("<li>브라우저 선택(input-datalist):\r\n");
      out.write("  <input list=\"browsers\" name=\"browsers\">\r\n");
      out.write("  <datalist id=\"browsers\">\r\n");
      out.write("    <option value=\"Edge\">\r\n");
      out.write("    <option value=\"Firefox\">\r\n");
      out.write("    <option value=\"Chrome\">\r\n");
      out.write("    <option value=\"Opera\">\r\n");
      out.write("    <option value=\"Safari\">\r\n");
      out.write("  </datalist>\r\n");
      out.write("</form>\r\n");
      out.write("</li>\r\n");
      out.write("<li>자기소개(textarea의 rows,cols속성 적용):<textarea name=\"mySelf\" id=\"mySelf\" rows=\"5\" cols=\"30\"/>tx기본값</textarea></li>\r\n");
      out.write("<li>자기소개(textarea의 style 속성 적용 style=\"css속성명:값;\"):<textarea name=\"mySelf1\" id=\"mySelf1\" style=\"height:80px;width:120px;color:red;\"/>tx기본값</textarea></li>\r\n");
      out.write("<li><form oninput=\"result.value=parseInt(num1.value)+parseInt(num2.value)\">\r\n");
      out.write("<input type=\"number\" name=\"num1\" value=\"0\">\r\n");
      out.write("+<input type=\"number\" name=\"num2\" value=\"0\">\r\n");
      out.write("=<output name=\"result\" for=\"num\"></output></form>\r\n");
      out.write("</li>\r\n");
      out.write("<li><label>자바왕이 되기까지 진행률 99%</label>\r\n");
      out.write("<progress value=\"90\" max=\"100\"></progress></li>\r\n");
      out.write("<li>\r\n");
      out.write("	<label>적절한 점유율</label>\r\n");
      out.write("	<meter value=\"0.5\" optimum=\"0.8\"></meter>\r\n");
      out.write("</li>\r\n");
      out.write("<li>\r\n");
      out.write("	<label>초과된 값</label>\r\n");
      out.write("	<meter min=\"1024\" max=\"10240\" low=\"2048\" high=\"8192\" value=\"9216\"></meter>\r\n");
      out.write("</li>\r\n");
      out.write("<li>\r\n");
      out.write("<form>\r\n");
      out.write("  <label for=\"nomod\">수정불가:</label><br>\r\n");
      out.write("  <input type=\"text\" id=\"nomod\" name=\"nomod\" value=\"수정불가부분\" disabled><br>\r\n");
      out.write("  <label for=\"nomod\">수정가능:</label><br>\r\n");
      out.write("  <input type=\"text\" id=\"nomod\" name=\"nomod\" value=\"수정가능부분\">\r\n");
      out.write("</form>\r\n");
      out.write("</li>\r\n");
      out.write("</ul>\r\n");
      out.write("<hr/>\r\n");
      out.write("<pre>\r\n");
      out.write("<a href=\"https://www.w3schools.com/html/html_forms.asp\" target=\"_blank\">form참고</a>\r\n");
      out.write("</pre>\r\n");
      out.write("\r\n");
      out.write("<hr/>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
